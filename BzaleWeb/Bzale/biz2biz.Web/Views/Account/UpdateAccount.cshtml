@using Kendo.Mvc.UI
@model biz2biz.ViewModel.AccountViewModels.AccountUpdateViewModel

@{
    ViewBag.Title = "title";
    Layout = "/Views/Shared/_MyAccount.cshtml";
}


@using (Html.BeginForm("UpdateAccount", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    <h2>Opdater bruger information</h2>
    <p>Har du oprettet dig under forkert CVR ? Kontakt os.</p>
    this.Html.ValidationSummary(true);
    @Html.AntiForgeryToken();
    @*@Html.ValidationSummary("", new { @class = "text-danger" })*@

    <div id="divForm" class="form-group">
        <h3>Virksomheds Information</h3>
        <div class="divpaddings">
            @Html.LabelFor(e => e.VAT, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.Kendo().TextBoxFor(e => e.VAT).HtmlAttributes(new { @class = "form-control", @readonly = true }).
            </div>
        </div>
        <div class="divpaddings">
            @Html.LabelFor(e => e.CompanyName, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.Kendo().TextBoxFor(e => e.CompanyName).HtmlAttributes(new { @class = "form-control", @readonly = true }).
            </div>
        </div>
        <div class="divpaddings">
            @Html.LabelFor(e => e.CompanyAddress, new {@class = "col-md-2 control-label"})
            <div class="col-md-10">
                @Html.Kendo().TextBoxFor(e => e.CompanyAddress).HtmlAttributes(new {@class = "form-control", @readonly = true})
            </div>
        </div>
        <div class="divpaddings">
            @Html.LabelFor(e => e.CompanyEmail, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.Kendo().TextBoxFor(e => e.CompanyEmail).HtmlAttributes(new { @class = "form-control" })
            </div>
        </div>
        <div class="divpaddings">
            @Html.LabelFor(e => e.CompanyPhone, new {@class = "col-md-2 control-label"})
            <div class="col-md-10">
                @Html.Kendo().TextBoxFor(e => e.CompanyPhone).HtmlAttributes(new {@class = "form-control"})
            </div>
        </div>
        <h3>Dine informationer</h3>
        <div class="divpaddings">
            @Html.LabelFor(m => m.FirstName, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.Kendo().TextBoxFor(e => e.FirstName).HtmlAttributes(new { @class = "form-control"})
            </div>
        </div>
        <div class="divpaddings">
            @Html.LabelFor(m => m.LastName, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.Kendo().TextBoxFor(e => e.LastName).HtmlAttributes(new { @class = "form-control", required = true })
            </div>
        </div>
        <div class="divpaddings">
            @Html.LabelFor(m => m.Address, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.Kendo().TextBoxFor(e => e.Address).HtmlAttributes(new { @class = "form-control" })
            </div>
        </div>
        <div class="divpaddings">
            @Html.LabelFor(m => m.PostalCode, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.Kendo().TextBoxFor(e => e.PostalCode).HtmlAttributes(new { @class = "form-control", @type = "number" })
            </div>
        </div>
        <div class="divpaddings">
            @Html.LabelFor(m => m.Gender, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.Kendo().DropDownListFor(e => e.Gender).BindTo(new List<SelectListItem>
                    () {
                    new SelectListItem() {
                    Text = "Ikke oplyst",
                    Value = "0"
                    },
                    new SelectListItem() {
                    Text = "Mand",
                    Value = "1"
                    },
                    new SelectListItem() {
                    Text = "Kvinde",
                    Value = "2"
                    }
                    }).Value("0")
            </div>
        </div>
        <div class="divpaddings">
            @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.Kendo().TextBoxFor(m => m.Email).HtmlAttributes(new { @class = "form-control", @type = "email", @onchange = "validateemail();", required = true })
                <h4 class="emailerror" style="color: red;"></h4>

            </div>
        </div>
        <div class="divpaddings">
            @Html.LabelFor(m => m.Phone, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.Kendo().TextBoxFor(m => m.Phone).HtmlAttributes(new { @class = "form-control", @type = "number" })
            </div>
        </div>
        <div class="divpaddings">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" class="btn btn-default" value="Opdater" />
            </div>
        </div>
    </div>
}

<script type="text/javascript">

    function validateemail() {
        var mail = $("#Email").val();
        debugger;
        var ismail = isEmail(mail);
        if (ismail) {
            $.ajax({
                url: '@Url.Action("IsAccountEmailInDatabase", "Account")',
                contentType: "application/json; charset=utf-8",
                data: { email: mail },
                success: function (res) {

                    if (res == "True") {
                        $(".emailerror").text("Email eksistere i databasen");
                    }
                },
                error: function (res) {
                    debugger;
                }
            });
        }
    }
</script>

<style>
    .valid {
        color: green;
    }

    .invalid {
        color: red;
    }
</style>