@using biz2biz.ViewModel.AccountViewModels
@using Kendo.Mvc.UI
@model AccountCreateViewModel

@{
    ViewBag.Title = "Opret virksomhed";
    Layout = "/Views/Shared/_Layout.cshtml";
}
<style>
    input[type=number]::-webkit-inner-spin-button,
    input[type=number]::-webkit-outer-spin-button {
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
        margin: 0;
    }
</style>
@*<link href="http://cdn.kendostatic.com/2014.2.903/styles/kendo.common.min.css" rel="stylesheet" />
<link href="http://cdn.kendostatic.com/2014.2.903/styles/kendo.default.min.css" rel="stylesheet" />
<link href="http://cdn.kendostatic.com/2014.2.903/styles/kendo.dataviz.min.css" rel="stylesheet" />
<link href="http://cdn.kendostatic.com/2014.2.903/styles/kendo.dataviz.default.min.css" rel="stylesheet" />
<script src="http://cdn.kendostatic.com/2014.2.903/js/jquery.min.js"></script>
<script src="http://cdn.kendostatic.com/2014.2.903/js/angular.min.js"></script>
<script src="http://cdn.kendostatic.com/2014.2.903/js/kendo.all.min.js"></script>*@
<script src="~/Scripts/biz2bizScripts.js"></script>
<h3>Opret & bruger</h3>
<i>Da dette er handel imellem professionelle, skal du være CVR registreret for at oprette en bruger</i>

@using (Html.BeginForm("RegisterNewAccount", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    this.Html.ValidationSummary(true);
    @Html.AntiForgeryToken();
    @Html.ValidationSummary("", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(e => e.VAT, new { @class = "col-md-2 control-label" })
        <div class="col-md-10 editor-field">
            @Html.Kendo().TextBoxFor(e => e.VAT).HtmlAttributes(new { @onchange = "onVatChange();", @type = "number", @class = "form-control", @required = true })
            <h4 class="vaterror" style="color: red;"></h4>
        </div>
    </div>
    <div id="divForm">
        <div id="divHideUntilValidVAT">
            <div class="form-group">
                @Html.LabelFor(e => e.CompanyName, new {@class = "col-md-2 control-label"})
                <div class="col-md-10">
                    @Html.Kendo().TextBoxFor(e => e.CompanyName).HtmlAttributes(new {@class = "form-control", @readonly = true}).
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(e => e.CompanyAddress, new {@class = "col-md-2 control-label"})
                <div class="col-md-10">
                    @Html.Kendo().TextBoxFor(e => e.CompanyAddress).HtmlAttributes(new {@class = "form-control", @readonly = true})
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Name, new {@class = "col-md-2 control-label"})
            <div class="col-md-10">
                @Html.Kendo().TextBoxFor(e => e.Name).HtmlAttributes(new {@class = "form-control", @required = true})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Email, new {@class = "col-md-2 control-label"})
            <div class="col-md-10">
                @Html.Kendo().TextBoxFor(m => m.Email).HtmlAttributes(new {@class = "form-control", @type = "email", @onchange = "validateemail();", @placeholder = "e.g. dinvirksomhed@virk.com"})
            </div>
            <h4 class="emailerror" style="color: red;"></h4>

        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Password, new {@class = "col-md-2 control-label"})
            <div class="col-md-10">
                @Html.Kendo().TextBoxFor(m => m.Password).HtmlAttributes(new {@class = "form-control", type = "password"}).
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" class="btn btn-default" value="Opret bruger"/>
            </div>
        </div>
    </div>

}


<script type="text/javascript">
    $(document).ready(function () {
        $("#divHideUntilValidVAT").hide();
        CloseWindow();
    });
    $(window).load(function () {
        CloseWindow();

    });
    var companyName;
    var companyAddress;

    function validatevat() {
        onVatChange();
    }
    function validateemail() {
        var mail = $("#Email").val();
        $(".emailerror").text("");
        debugger;
        var ismail = isEmail(mail);
        if (ismail) {
            $.ajax({
                url: '@Url.Action("IsEmailInDatabase", "Account")',
                contentType: "application/json; charset=utf-8",
                data: { email: mail },
                success: function (res) {
                    
                    if (res == "True") {
                        $(".emailerror").text("Email eksistere i databasen");
                    } 
                },
                error: function (res) {
                    debugger;
                }
            });
        } 
    }

    function onVatChange() {
        $("#divHideUntilValidVAT").hide();
        $(".vaterror").text("");
        var vat = $("#VAT").val();

        if (vat.toString().length === 8) {
            $.ajax({
                url: '@Url.Action("IsVatInDatabase", "Account")',
                contentType: "application/json; charset=utf-8",
                data: { vat: vat },
                success: function (res) {
                    if (res == "True") {
                        $(".vaterror").text("CVR nummer er i databasen");
                    } else {
                        $.ajax({
                            url: '@Url.Action("ValidateVat", "Account")',
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            data: { vat: vat },
                            success: function (res) {
                                if (res.IsValid) {
                                    $("#CompanyName").val(res.Name);
                                    $("#CompanyAddress").val(res.Address);
                                    $("#divHideUntilValidVAT").show();
                                    $("#btnValidateVat").hide();

                                }
                            },
                            error: function (res) {
                                debugger;
                            }
                        });
                    }
                },
                error: function (res) {
                    debugger;
                }
            });
        } else {
            $(".vaterror").text("CVR nummer er ikke gyldigt!");

        }
    }

    function acceptVat_click() {
        $("#CompanyName").val(companyName);
        $("#CompanyAddress").val(companyAddress);
        $("#divHideUntilValidVAT").show();
        $("#btnValidateVat").hide();
        CloseWindow();
    }

    function denyvat_click() {
        $("#CompanyName").val("");
        CloseWindow();
        var _numeric = $("#VAT").kendoNumericTextBox().data("kendoNumericTextBox");
        _numeric.value("");
        $("#btnValidateVat").show();

    }

    function CloseWindow() {
        $("#window").data("kendoWindow").close();
        companyName = null;
        companyAddress = null;
    }

    $(document).ready(function() {
        $("#divHideUntilValidVAT").hide();


        var validator = $("#divForm").kendoValidator().data("kendoValidator"),
        status = $(".status");

        $("form").submit(function(event) {
            event.preventDefault();
            if (validator.validate()) {
                status.text("Hooray! Your tickets has been booked!")
                    .removeClass("invalid")
                    .addClass("valid");
            } else {
                status.text("Oops! There is invalid data in the form.")
                    .removeClass("valid")
                    .addClass("invalid");
            }
        });

        /* Bind Mutation Events */
        var elements = $("#divForm").find("[data-role=autocomplete],[data-role=combobox],[data-role=dropdownlist],[data-role=numerictextbox]");

        var hasMutationEvents = ("MutationEvent" in window),
            MutationObserver = window.WebKitMutationObserver || window.MutationObserver;

        if (MutationObserver) {
            var observer = new MutationObserver(function (mutations) {
                var idx = 0,
                    mutation,
                    length = mutations.length;

                for (; idx < length; idx++) {
                    mutation = mutations[idx];
                    if (mutation.attributeName === "class") {
                        updateCssOnPropertyChange(mutation);
                    }
                }
            }),
            config = { attributes: true, childList: false, characterData: false };

            elements.each(function () {
                observer.observe(this, config);
            });
        } else if (hasMutationEvents) {
            elements.bind("DOMAttrModified", updateCssOnPropertyChange);
        } else {
            elements.each(function () {
                this.attachEvent("onpropertychange", updateCssOnPropertyChange);
            });
        }

        function updateCssOnPropertyChange (e) {
            var element = $(e.target || e.srcElement);

            element.siblings("span.k-dropdown-wrap")
                   .add(element.parent("span.k-numeric-wrap"))
                   .toggleClass("k-invalid", element.hasClass("k-invalid"));
        }
    });
</script>

<style>
                .valid {
                color: green;
            }

            .invalid {
                color: red;
            }
</style>